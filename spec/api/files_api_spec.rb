=begin
#Zenodo API

#This is for the zenodo API http://developers.zenodo.org/#rest-api

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'spec_helper'
require 'json'

# Unit tests for ZenodoClient::FilesApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'FilesApi' do
  before do
    # run before each test
    @instance = ZenodoClient::FilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FilesApi' do
    it 'should create an instance of FilesApi' do
      expect(@instance).to be_instance_of(ZenodoClient::FilesApi)
    end
  end

  # unit tests for create_file
  # Create a new file
  # 
  # @param deposit_id 
  # @param [Hash] opts the optional parameters
  # @option opts [UploadFile] :upload_file 
  # @return [DepositionFile]
  describe 'create_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for delete_file
  # Delete an existing deposition file resource. Note, only deposition files for unpublished depositions may be deleted.
  # 
  # @param deposit_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [DepositionFile]
  describe 'delete_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for get_file
  # Retrieve a single deposition file.
  # 
  # @param deposit_id 
  # @param file_id 
  # @param [Hash] opts the optional parameters
  # @return [DepositionFile]
  describe 'get_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for list_files_for_deposit
  # List of files for deposit
  # 
  # @param deposit_id 
  # @param [Hash] opts the optional parameters
  # @return [Array<DepositionFile>]
  describe 'list_files_for_deposit test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for sort_files
  # Sort the files for a deposit
  # 
  # @param deposit_id 
  # @param deposit_file The order of files, use only the id portion of the array of files
  # @param [Hash] opts the optional parameters
  # @return [Array<DepositionFile>]
  describe 'sort_files test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for update_file
  # Update a deposition file resource. Currently the only use is renaming an already uploaded file. If you want to replace the actual file, please delete the file and upload a new file.
  # 
  # @param deposit_id 
  # @param file_id 
  # @param deposit_file 
  # @param [Hash] opts the optional parameters
  # @return [DepositionFile]
  describe 'update_file test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end

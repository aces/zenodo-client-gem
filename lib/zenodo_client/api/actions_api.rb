=begin
#Zenodo API

#This is for the zenodo API http://developers.zenodo.org/#rest-api

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'uri'

module ZenodoClient
  class ActionsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Discard changes in the current editing session.
    # Untested swagger description
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Deposit]
    def discard_deposit(deposit_id, opts = {})
      data, _status_code, _headers = discard_deposit_with_http_info(deposit_id, opts)
      data
    end

    # Discard changes in the current editing session.
    # Untested swagger description
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Deposit, Fixnum, Hash)>] Deposit data, response status code and response headers
    def discard_deposit_with_http_info(deposit_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ActionsApi.discard_deposit ...'
      end
      # verify the required parameter 'deposit_id' is set
      if @api_client.config.client_side_validation && deposit_id.nil?
        fail ArgumentError, "Missing the required parameter 'deposit_id' when calling ActionsApi.discard_deposit"
      end
      # resource path
      local_var_path = '/deposit/depositions/{depositId}/actions/discard'.sub('{' + 'depositId' + '}', deposit_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Deposit')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ActionsApi#discard_deposit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Unlock already submitted deposition for editing.
    # Untested swagger description
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Deposit]
    def edit_deposit(deposit_id, opts = {})
      data, _status_code, _headers = edit_deposit_with_http_info(deposit_id, opts)
      data
    end

    # Unlock already submitted deposition for editing.
    # Untested swagger description
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Deposit, Fixnum, Hash)>] Deposit data, response status code and response headers
    def edit_deposit_with_http_info(deposit_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ActionsApi.edit_deposit ...'
      end
      # verify the required parameter 'deposit_id' is set
      if @api_client.config.client_side_validation && deposit_id.nil?
        fail ArgumentError, "Missing the required parameter 'deposit_id' when calling ActionsApi.edit_deposit"
      end
      # resource path
      local_var_path = '/deposit/depositions/{depositId}/actions/edit'.sub('{' + 'depositId' + '}', deposit_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Deposit')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ActionsApi#edit_deposit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Create a new version of a deposition.
    # Untested swagger description
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Deposit]
    def new_deposit_version(deposit_id, opts = {})
      data, _status_code, _headers = new_deposit_version_with_http_info(deposit_id, opts)
      data
    end

    # Create a new version of a deposition.
    # Untested swagger description
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Deposit, Fixnum, Hash)>] Deposit data, response status code and response headers
    def new_deposit_version_with_http_info(deposit_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ActionsApi.new_deposit_version ...'
      end
      # verify the required parameter 'deposit_id' is set
      if @api_client.config.client_side_validation && deposit_id.nil?
        fail ArgumentError, "Missing the required parameter 'deposit_id' when calling ActionsApi.new_deposit_version"
      end
      # resource path
      local_var_path = '/deposit/depositions/{depositId}/actions/newversion'.sub('{' + 'depositId' + '}', deposit_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Deposit')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ActionsApi#new_deposit_version\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Publish a deposition. Note, once a deposition is published, you can no longer delete it.
    # Untested swagger description
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Deposit]
    def publish_deposit(deposit_id, opts = {})
      data, _status_code, _headers = publish_deposit_with_http_info(deposit_id, opts)
      data
    end

    # Publish a deposition. Note, once a deposition is published, you can no longer delete it.
    # Untested swagger description
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Deposit, Fixnum, Hash)>] Deposit data, response status code and response headers
    def publish_deposit_with_http_info(deposit_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ActionsApi.publish_deposit ...'
      end
      # verify the required parameter 'deposit_id' is set
      if @api_client.config.client_side_validation && deposit_id.nil?
        fail ArgumentError, "Missing the required parameter 'deposit_id' when calling ActionsApi.publish_deposit"
      end
      # resource path
      local_var_path = '/deposit/depositions/{depositId}/actions/publish'.sub('{' + 'depositId' + '}', deposit_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Deposit')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ActionsApi#publish_deposit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end

=begin
#Zenodo API

#This is for the zenodo API http://developers.zenodo.org/#rest-api

OpenAPI spec version: 1.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.8

=end

require 'uri'

module ZenodoClient
  class DepositsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a new deposit
    # 
    # @param deposit The deposit to create.
    # @param [Hash] opts the optional parameters
    # @return [Deposit]
    def create_deposit(deposit, opts = {})
      data, _status_code, _headers = create_deposit_with_http_info(deposit, opts)
      data
    end

    # Create a new deposit
    # 
    # @param deposit The deposit to create.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Deposit, Fixnum, Hash)>] Deposit data, response status code and response headers
    def create_deposit_with_http_info(deposit, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DepositsApi.create_deposit ...'
      end
      # verify the required parameter 'deposit' is set
      if @api_client.config.client_side_validation && deposit.nil?
        fail ArgumentError, "Missing the required parameter 'deposit' when calling DepositsApi.create_deposit"
      end
      # resource path
      local_var_path = '/deposit/depositions'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(deposit)
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Deposit')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DepositsApi#create_deposit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Delete deposit
    # Delete a single deposit
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [nil]
    def delete_deposit(deposit_id, opts = {})
      delete_deposit_with_http_info(deposit_id, opts)
      nil
    end

    # Delete deposit
    # Delete a single deposit
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(nil, Fixnum, Hash)>] nil, response status code and response headers
    def delete_deposit_with_http_info(deposit_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DepositsApi.delete_deposit ...'
      end
      # verify the required parameter 'deposit_id' is set
      if @api_client.config.client_side_validation && deposit_id.nil?
        fail ArgumentError, "Missing the required parameter 'deposit_id' when calling DepositsApi.delete_deposit"
      end
      # resource path
      local_var_path = '/deposit/depositions/{depositId}'.sub('{' + 'depositId' + '}', deposit_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DepositsApi#delete_deposit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Get deposit
    # Get a single deposit
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Deposit]
    def get_deposit(deposit_id, opts = {})
      data, _status_code, _headers = get_deposit_with_http_info(deposit_id, opts)
      data
    end

    # Get deposit
    # Get a single deposit
    # @param deposit_id 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Deposit, Fixnum, Hash)>] Deposit data, response status code and response headers
    def get_deposit_with_http_info(deposit_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DepositsApi.get_deposit ...'
      end
      # verify the required parameter 'deposit_id' is set
      if @api_client.config.client_side_validation && deposit_id.nil?
        fail ArgumentError, "Missing the required parameter 'deposit_id' when calling DepositsApi.get_deposit"
      end
      # resource path
      local_var_path = '/deposit/depositions/{depositId}'.sub('{' + 'depositId' + '}', deposit_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Deposit')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DepositsApi#get_deposit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # List of deposits
    # 
    # @param [Hash] opts the optional parameters
    # @return [Array<Deposit>]
    def list_deposits(opts = {})
      data, _status_code, _headers = list_deposits_with_http_info(opts)
      data
    end

    # List of deposits
    # 
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<Deposit>, Fixnum, Hash)>] Array<Deposit> data, response status code and response headers
    def list_deposits_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DepositsApi.list_deposits ...'
      end
      # resource path
      local_var_path = '/deposit/depositions'

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<Deposit>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DepositsApi#list_deposits\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
    # Put deposit
    # Update metadata for a single deposit
    # @param deposit_id 
    # @param deposit The deposit to update.
    # @param [Hash] opts the optional parameters
    # @return [Deposit]
    def put_deposit(deposit_id, deposit, opts = {})
      data, _status_code, _headers = put_deposit_with_http_info(deposit_id, deposit, opts)
      data
    end

    # Put deposit
    # Update metadata for a single deposit
    # @param deposit_id 
    # @param deposit The deposit to update.
    # @param [Hash] opts the optional parameters
    # @return [Array<(Deposit, Fixnum, Hash)>] Deposit data, response status code and response headers
    def put_deposit_with_http_info(deposit_id, deposit, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: DepositsApi.put_deposit ...'
      end
      # verify the required parameter 'deposit_id' is set
      if @api_client.config.client_side_validation && deposit_id.nil?
        fail ArgumentError, "Missing the required parameter 'deposit_id' when calling DepositsApi.put_deposit"
      end
      # verify the required parameter 'deposit' is set
      if @api_client.config.client_side_validation && deposit.nil?
        fail ArgumentError, "Missing the required parameter 'deposit' when calling DepositsApi.put_deposit"
      end
      # resource path
      local_var_path = '/deposit/depositions/{depositId}'.sub('{' + 'depositId' + '}', deposit_id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      header_params['Content-Type'] = @api_client.select_header_content_type(['application/json', 'multipart/form-data'])

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(deposit)
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Deposit')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: DepositsApi#put_deposit\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
